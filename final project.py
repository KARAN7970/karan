#challange 1
class FoodItem:
    def __init__(self, name, quantity, price, discount, stock):
        self.food_id = None  # Automatically generated by the application
        self.name = name
        self.quantity = quantity
        self.price = price
        self.discount = discount
        self.stock = stock

class RestaurantMenu:
    def __init__(self):
        self.menu = []

    def add_food_item(self, name, quantity, price, discount, stock):
        food_item = FoodItem(name, quantity, price, discount, stock)
        # Generate a unique food_id, you can use a counter or a unique identifier
        food_item.food_id = len(self.menu) + 1
        self.menu.append(food_item)

    def edit_food_item(self, food_id, name, quantity, price, discount, stock):
        for item in self.menu:
            if item.food_id == food_id:
                item.name = name
                item.quantity = quantity
                item.price = price
                item.discount = discount
                item.stock = stock
                return True
        return False

    def view_all_food_items(self):
        return self.menu

    def remove_food_item(self, food_id):
        for item in self.menu:
            if item.food_id == food_id:
                self.menu.remove(item)
                return True
        return False

# Example usage
if __name__ == "__main__":
    menu = RestaurantMenu()

    while True:
        print("\nAdmin Menu:")
        print("1. Add new food item")
        print("2. Edit food item")
        print("3. View all food items")
        print("4. Remove food item")
        print("5. Quit")

        choice = input("Enter your choice: ")

        if choice == "1":
            name = input("Enter food name: ")
            quantity = input("Enter quantity: ")
            price = float(input("Enter price: "))
            discount = float(input("Enter discount: "))
            stock = int(input("Enter stock: "))
            menu.add_food_item(name, quantity, price, discount, stock)
            print("Food item added successfully!")

        elif choice == "2":
            food_id = int(input("Enter FoodID to edit: "))
            if menu.edit_food_item(food_id, input("Enter food name: "), input("Enter quantity: "),
                                    float(input("Enter price: ")), float(input("Enter discount: ")),
                                    int(input("Enter stock: "))):
                print("Food item edited successfully!")
            else:
                print("Food item not found.")

        elif choice == "3":
            print("List of all food items:")
            for item in menu.view_all_food_items():
                print(f"FoodID: {item.food_id}, Name: {item.name}, Quantity: {item.quantity}, Price: {item.price}, Discount: {item.discount}, Stock: {item.stock}")

        elif choice == "4":
            food_id = int(input("Enter FoodID to remove: "))
            if menu.remove_food_item(food_id):
                print("Food item removed successfully!")
            else:
                print("Food item not found.")

        elif choice == "5":
            break

        else:
            print("Invalid choice. Please try again.")





 #challenge 2


 class User:
    def __init__(self, full_name, phone_number, email, address, password):
        self.full_name = full_name
        self.phone_number = phone_number
        self.email = email
        self.address = address
        self.password = password
        self.orders = []

    def place_order(self, menu, item_numbers):
        selected_items = []
        for number in item_numbers:
            if 1 <= number <= len(menu):
                selected_items.append(menu[number - 1])
        self.orders.append(selected_items)

    def view_order_history(self):
        return self.orders

    def update_profile(self, full_name, phone_number, address, password):
        self.full_name = full_name
        self.phone_number = phone_number
        self.address = address
        self.password = password

class MenuItem:
    def __init__(self, name, description, price):
        self.name = name
        self.description = description
        self.price = price

class RestaurantMenu:
    def __init__(self):
        self.menu = []

    def add_menu_item(self, name, description, price):
        item = MenuItem(name, description, price)
        self.menu.append(item)

    def view_menu(self):
        return self.menu

# Create a sample menu
menu = RestaurantMenu()
menu.add_menu_item("Tandoori Chicken", "4 pieces", 240)
menu.add_menu_item("Vegan Burger", "1 Piece", 320)
menu.add_menu_item("Truffle Cake", "500gm", 900)

# Example usage
if __name__ == "__main__":
    users = []
    current_user = None

    while True:
        print("\nMain Menu:")
        print("1. Register")
        print("2. Log in")
        print("3. Quit")

        choice = input("Enter your choice: ")

        if choice == "1":
            full_name = input("Enter your full name: ")
            phone_number = input("Enter your phone number: ")
            email = input("Enter your email: ")
            address = input("Enter your address: ")
            password = input("Enter your password: ")
            user = User(full_name, phone_number, email, address, password)
            users.append(user)
            print("Registration successful!")

        elif choice == "2":
            email = input("Enter your email: ")
            password = input("Enter your password: ")
            for user in users:
                if user.email == email and user.password == password:
                    current_user = user
                    print("Login successful!")
                    break
            else:
                print("Login failed. Please check your email and password.")

        elif choice == "3":
            break

        elif current_user:
            print("\nUser Menu:")
            print("1. Place New Order")
            print("2. Order History")
            print("3. Update Profile")
            print("4. Logout")

            choice = input("Enter your choice: ")

            if choice == "1":
                print("\nAvailable Menu Items:")
                for i, item in enumerate(menu.view_menu(), 1):
                    print(f"{i}. {item.name} ({item.description}) [INR {item.price}]")

                selected_items = input("Enter item numbers separated by space: ")
                item_numbers = list(map(int, selected_items.split()))
                current_user.place_order(menu.view_menu(), item_numbers)
                print("Order placed successfully!")

            elif choice == "2":
                print("Order History:")
                for order in current_user.view_order_history():
                    print("Items:")
                    for i, item in enumerate(order, 1):
                        print(f"{i}. {item.name} ({item.description}) [INR {item.price}]")
                    print("")

            elif choice == "3":
                full_name = input("Enter your full name: ")
                phone_number = input("Enter your phone number: ")
                address = input("Enter your address: ")
                password = input("Enter your new password: ")
                current_user.update_profile(full_name, phone_number, address, password)
                print("Profile updated successfully!")

            elif choice == "4":
                current_user = None
                print("Logout successful!")

            else:
                print("Invalid choice. Please try again.")

        else:
            print("Please log in first.")
